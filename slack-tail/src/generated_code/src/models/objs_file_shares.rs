/* 
 * Slack Web API
 *
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * OpenAPI spec version: 1.5.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct ObjsFileShares {
  #[serde(rename = "private")]
  private: Option<Value>,
  #[serde(rename = "public")]
  public: Option<Value>
}

impl ObjsFileShares {
  pub fn new() -> ObjsFileShares {
    ObjsFileShares {
      private: None,
      public: None
    }
  }

  pub fn set_private(&mut self, private: Value) {
    self.private = Some(private);
  }

  pub fn with_private(mut self, private: Value) -> ObjsFileShares {
    self.private = Some(private);
    self
  }

  pub fn private(&self) -> Option<&Value> {
    self.private.as_ref()
  }

  pub fn reset_private(&mut self) {
    self.private = None;
  }

  pub fn set_public(&mut self, public: Value) {
    self.public = Some(public);
  }

  pub fn with_public(mut self, public: Value) -> ObjsFileShares {
    self.public = Some(public);
    self
  }

  pub fn public(&self) -> Option<&Value> {
    self.public.as_ref()
  }

  pub fn reset_public(&mut self) {
    self.public = None;
  }

}



